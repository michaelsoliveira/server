generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CategoriaEspecie {
  id                String    @id(map: "PK_2b252e9ab67497cb87a50f1e534") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at        DateTime  @default(now()) @db.Timestamp(6)
  updated_at        DateTime  @default(now()) @db.Timestamp(6)
  nome              String?   @db.VarChar(50)
  criterio_fuste    Int?      @db.SmallInt
  criterio_dminc    Int?      @db.SmallInt
  criterio_dmaxc    Int?      @db.SmallInt
  criterio_n_min    Int?      @db.SmallInt
  criterio_perc_min Int?      @db.SmallInt
  preservar         Boolean?
  criterio_altura   Float?
  criterio_volume   Float?
  especie           Especie[]
  @@map("categoria_especie")
}

model Empresa {
  id                         String          @id(map: "PK_bee78e8f1760ccf9cff402118a6") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at                 DateTime        @default(now()) @db.Timestamp(6)
  updated_at                 DateTime        @default(now()) @db.Timestamp(6)
  razao_social               String          @db.VarChar(100)
  nome_fantasia              String?         @db.VarChar(100)
  cnpj                       String?         @db.VarChar(14)
  reg_ambiental              String?         @db.VarChar(50)
  telefone                   String?         @db.VarChar(10)
  endereco                   String?         @db.VarChar(60)
  complemento                String?         @db.VarChar(40)
  cep                        String?         @db.VarChar(8)
  municipio                  String?         @db.VarChar(30)
  estado                     String?         @db.VarChar(2)
  contato                    String?         @db.VarChar(50)
  resp_tecnico               String?         @db.VarChar(50)
  crea_resp                  String?         @db.VarChar(50)
  dmin_relatorio             Int?
  intervalo_dmin_relatorio   Int?
  empresa_users              EmpresaUser[]
  endereco_empresaToendereco Endereco[]
  projeto                    Projeto[]
  umf                        Umf[]
  equacao_modelo             EquacaoModelo[]
  equacao_Volume             EquacaoVolume[]
  upa                        Upa[]
  @@map("empresa")
}

model EmpresaUser {
  id_empresa String  @db.Uuid
  id_user    String  @db.Uuid
  empresa    Empresa @relation(fields: [id_empresa], references: [id], onDelete: Cascade, map: "FK_9197746d4fec9555520a45d1ad0")
  users      User   @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ea3cb7162981b687e4daa856bf1")

  @@id([id_empresa, id_user], map: "PK_57c5338b1a54ea499a79c1286f2")
  @@index([id_empresa], map: "IDX_9197746d4fec9555520a45d1ad")
  @@index([id_user], map: "IDX_ea3cb7162981b687e4daa856bf")
  @@map("empresa_users")
}

model Endereco {
  id         String   @id(map: "PK_2a6880f71a7f8d1c677bb2a32a8") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  cep        String?  @db.VarChar(8)
  logradouro String?  @db.VarChar(60)
  municipio  String?  @db.VarChar(30)
  estado     String?  @db.VarChar(2)
  bairro     String?  @db.VarChar(50)
  id_empresa String?  @db.Uuid
  empresa    Empresa? @relation(fields: [id_empresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a72fa0a052cd28afba4a0e776c5")
  @@map("endereco")
}

model Especie {
  id                String             @id(map: "PK_07fb45be286aefa181943248b21") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at        DateTime           @default(now()) @db.Timestamp(6)
  updated_at        DateTime           @default(now()) @db.Timestamp(6)
  nome              String?            @db.VarChar(50)
  nome_orgao        String?            @db.VarChar(50)
  nome_cientifico   String?            @db.VarChar(100)
  id_categoria      String?            @db.Uuid
  categoria_especie CategoriaEspecie? @relation(fields: [id_categoria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b6c8cdf66e1a2b50baa526c0281")
  @@map("especie")
}

model Permission {
  id                String              @id(map: "PK_920331560282b8bd21bb02290df") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  name              String              @db.VarChar
  description       String              @db.VarChar
  permissions_roles PermissionRole[]
  users_permissions UserPermission[]
  @@map("permissions")
}

model PermissionRole {
  role_id       String      @db.Uuid
  permission_id String      @db.Uuid
  permissions   Permission @relation(fields: [permission_id], references: [id], onDelete: Cascade, map: "FK_3309f5fa8d95935f0701027f2bd")
  roles         Role       @relation(fields: [role_id], references: [id], onDelete: Cascade, map: "FK_e08f6859eaac8cbf7f087f64e2b")

  @@id([role_id, permission_id], map: "PK_838ed6e68b01d6912fa682bedef")
  @@index([permission_id], map: "IDX_3309f5fa8d95935f0701027f2b")
  @@index([role_id], map: "IDX_e08f6859eaac8cbf7f087f64e2")
  @@map("permissions_roles")
}

model Projeto {
  id         String   @id(map: "PK_87de7c3af72f824a860298c3c3e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  nome       String   @db.VarChar
  id_empresa String?  @db.Uuid
  empresa    Empresa? @relation(fields: [id_empresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5c89069177d3ac18f7e268e7b07")
  @@map("projeto")
}

model RefreshToken {
  id         String   @id(map: "PK_b575dd3c21fb0831013c909e7fe") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  expires_in Int
  token      String   @db.VarChar
  id_user    String?  @db.Uuid
  users      User?   @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_fd79923e4359a26a971f841fb5e")
  @@map("refresh_token")
}

model Role {
  id                String              @id(map: "PK_c1433d71a4838793a49dcad46ab") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  name              String              @db.VarChar
  description       String              @db.VarChar
  permissions_roles PermissionRole[]
  users_roles       UserRole[]
  @@map("roles")
}

model SpatialRefSys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
  upa         Upa[]
  @@map("spatial_ref_sys")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model typeorm_metadata {
  type     String  @db.VarChar
  database String? @db.VarChar
  schema   String? @db.VarChar
  table    String? @db.VarChar
  name     String? @db.VarChar
  value    String?

  @@ignore
}

model Umf {
  id          String   @id(map: "PK_fc13d7f2c91d3fc3ea2dd802120") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  nome        String   @db.VarChar(50)
  municipio   String?
  localizacao String?  @db.VarChar(50)
  id_empresa  String?  @db.Uuid
  id_estado   String?  @db.Uuid
  empresa     Empresa? @relation(fields: [id_empresa], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estado      Estado? @relation(fields: [id_estado], references: [id], onDelete: NoAction, onUpdate: NoAction)
  upa         Upa[]
  @@map("umf")
}

model Upa {
  id                    String   @id(map: "PK_8beec4503af75eabc74b6f33c8e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at            DateTime @default(now()) @db.Timestamp(6)
  updated_at            DateTime @default(now()) @db.Timestamp(6)
  ano                   Int
  descricao             String?  @db.VarChar(50)
  id_equacao_volume     String?  @db.Uuid
  id_empresa            String?  @db.Uuid
  tipo                  Int?
  srid                  Int?
  id_umf                String?  @db.Uuid
  umf                   Umf?     @relation(fields: [id_umf], references: [id], onDelete: Cascade, map: "FK_b88118f4ad5bc32837c3873a56f")
  ut                    Ut[]
  spatial_ref_sys       SpatialRefSys? @relation(fields: [srid], references: [srid], onDelete: NoAction)
  equacao_volume        EquacaoVolume? @relation(fields: [id_equacao_volume], references: [id], onDelete: NoAction)
  empresa               Empresa? @relation(fields: [id_empresa], references: [id], onDelete: NoAction, onUpdate: NoAction)
  @@map("upa")
}

model User {
  id                String              @id(map: "PK_a3ffb1c0c8416b9fc6f907b7433") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  username          String              @db.VarChar
  email             String              @db.VarChar
  password          String              @db.VarChar
  provider          String?             @db.VarChar
  id_provider       String?             @db.VarChar
  image             String?             @db.VarChar
  email_verified    DateTime?
  empresa_users     EmpresaUser[]
  refresh_token     RefreshToken[]
  users_permissions UserPermission[]
  users_roles       UserRole[]
  accounts          Account[]
  sessions          Session[]
  @@map("users")
}

model UserPermission {
  user_id       String      @db.Uuid
  permission_id String      @db.Uuid
  permissions   Permission @relation(fields: [permission_id], references: [id], onDelete: Cascade, map: "FK_b09b9a210c60f41ec7b453758e9")
  users         User       @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "FK_4de7d0b175f702be3be55270023")

  @@id([user_id, permission_id], map: "PK_7f3736984cd8546a1e418005561")
  @@index([user_id], map: "IDX_4de7d0b175f702be3be5527002")
  @@index([permission_id], map: "IDX_b09b9a210c60f41ec7b453758e")
  @@map("users_permissions")
}

model UserRole {
  user_id String @db.Uuid
  role_id String @db.Uuid
  roles   Role  @relation(fields: [role_id], references: [id], onDelete: Cascade, map: "FK_1cf664021f00b9cc1ff95e17de4")
  users   User  @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "FK_e4435209df12bc1f001e5360174")

  @@id([user_id, role_id], map: "PK_c525e9373d63035b9919e578a9c")
  @@index([role_id], map: "IDX_1cf664021f00b9cc1ff95e17de")
  @@index([user_id], map: "IDX_e4435209df12bc1f001e536017")
  @@map("users_roles")
}

model Ut {
  id                 String                   @id(map: "PK_887e89703ecfebb1f7b8b7006a3") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at         DateTime                 @default(now()) @db.Timestamp(6)
  updated_at         DateTime                 @default(now()) @db.Timestamp(6)
  numero_ut          Int
  area_util          Float?
  quantidade_faixas  Int?
  largura_faixas     Int?
  comprimento_faixas Int?
  area_total         Float?
  azimute            Float?
  quadrante          Int?
  latitude           Float?
  longitude          Float?
  shapefile          Bytes?
  origem             Unsupported("geometry")?
  id_upa             String?                  @db.Uuid
  upa                Upa?                     @relation(fields: [id_upa], references: [id], onDelete: Cascade, map: "FK_cb45ccb0356c31c3bf2f00b0086")
  @@map("ut")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Account {
  id                 String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId             String   @db.Uuid
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sessionToken String   @unique
  userId       String   @db.Uuid
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("sessions")
}

model Estado {
  id      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  uf      String
  nome    String
  ddd     Int?      @db.SmallInt 
  umf     Umf[]
  @@map("estado")
}

model EquacaoModelo {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome        String
  expressao   String    @db.VarChar(100)
  id_empresa  String    @db.Uuid
  empresa     Empresa?  @relation(fields: [id_empresa], references: [id], onDelete: NoAction, onUpdate: NoAction)
  @@map("equacao_modelo")
}

model EquacaoVolume {
  id          String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome        String
  expressao   String @db.VarChar(100)
  id_empresa  String     @db.Uuid
  observacao  String?
  empresa     Empresa? @relation(fields: [id_empresa], references: [id], onDelete: NoAction, onUpdate: NoAction)
  upa         Upa[]
  @@map("equacao_volume")
}